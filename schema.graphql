type Query {
  fetchUsers: [User]
  fetchUser(id: ID!): User
  fetchJobs: [Job]
  fetchJob(id: ID!): Job
  fetchBids: [Bid]
  fetchBid(id: ID!): Bid
  fetchReviews: [Review]
  fetchReview(id: ID!): Review
}

type User {
  _id: ID!
  username: String!
  profilePicture: String
  emailAddress: String!
  experience: String
  education: String
  payRate: String
  availability: String
  role: String
  rating: Int
  jobs: [Job]
  bids: [Bid]
  reviews: [Review]
}

type Review {
  _id: ID!
  rating: Int!
  reviewText: String!
  author: User
  reviewee: User
}

type Job {
  _id: ID!
  description: String!
  preferences: Preference!
  jobPoster: User!
  bids: [Bid]
}

type Preference {
  experience: String!
  languages: [String!]!
  availability: String!
}

type Bid {
  _id: ID!
  proposal: String!
  bidder: User!
  auctionedJob: Job!
}

type Mutation {
  signupUser(
    email: String!
    password: String!
    username: String!
    role: String
  ): Boolean!
  signinUser(email: String!, password: String!): Boolean!
  createJob(
    description: String!
    experience: String!
    availability: String!
    languages: [String!]!
    jobPoster: ID!
  ): Job!
  updateJob(
    id: ID!
    description: String!
    experience: String!
    availability: String!
    languages: [String]!
  ): Job!
  deleteJob(id: ID!): String!
  createBid(proposal: String!, bidder_id: ID!, job_id: ID!): Bid!
  updateBid(id: ID!, proposal: String!): Bid!
  deleteBid(id: ID!): String!
  createReview(
    rating: Int!
    reviewText: String!
    author: ID!
    reviewee: ID!
  ): Review!
  updateReview(id: ID!, rating: Int, reviewText: String): Review
  deleteReview(id: ID!): String!
}
